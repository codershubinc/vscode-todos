{"version":3,"file":"extension.js","mappings":"23BA2DA,oBAAyBA,GAIxBC,QAAQC,IAAI,iEACZD,QAAQC,IAAI,2EAGZ,MAAMC,EAAW,IAAIC,EAAkBJ,EAAQK,cAE/CL,EAAQM,cAAcC,KACrBC,EAAOC,OAAOC,4BAA4BN,EAAkBO,SAAUR,IAMvE,MAAMS,EAAaJ,EAAOK,SAASC,gBAAgB,0BAA2B,KAG7EN,EAAOC,OAAOM,uBAAuB,+BAGhCC,EAAcR,EAAOK,SAASC,gBAAgB,2BAA4B,QAIhFd,EAAQM,cAAcC,KAAKK,GAC3BZ,EAAQM,cAAcC,KAAKS,EAC5B,EAGA,wBAA+B,EAzF/B,kBAEA,MAAMZ,EAGwBa,cAFtBC,gBAA2B,YAElC,WAAAC,CAA6BF,GAAA,KAAAA,cAAAA,EAC5BhB,QAAQC,IAAI,qFACb,CACO,kBAAAkB,CACNC,EACArB,EACAsB,GAEArB,QAAQC,IAAI,gFAGZM,EAAOC,OAAOM,uBAAuB,mDAErCM,EAAYE,QAAQC,QAAU,CAC7BC,eAAe,EACfC,mBAAoB,CACnBC,KAAKV,gBAIPI,EAAYE,QAAQK,KAAOD,KAAKE,oBACjC,CAEQ,kBAAAA,GACP,MAAO,onBAuBR,E,UCtDDC,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://vs-todo/./src/extension.ts","webpack://vs-todo/external commonjs \"vscode\"","webpack://vs-todo/webpack/bootstrap","webpack://vs-todo/webpack/startup"],"sourcesContent":["// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\nclass TodosViewProvider implements vscode.WebviewViewProvider {\n\tpublic static readonly viewType = 'todosView';\n\n\tconstructor(private readonly _extensionUri: vscode.Uri) {\n\t\tconsole.log(\"Registering the webview provider +++++++++++++++++++++++++++++++++++++++++++++++++\");\n\t}\n\tpublic resolveWebviewView(\n\t\twebviewView: vscode.WebviewView,\n\t\tcontext: vscode.WebviewViewResolveContext,\n\t\t_token: vscode.CancellationToken,\n\t) {\n\t\tconsole.log(\"Resolving the webview view +++++++++++++++++++++++++++++++++++++++++++++++++\");\n\t\t// Show a visible notification so it's obvious when the view is resolved.\n\t\t// This is helpful for debugging â€” the Extension Host log may be missed.\n\t\tvscode.window.showInformationMessage('Todos view resolved (resolveWebviewView called)');\n\n\t\twebviewView.webview.options = {\n\t\t\tenableScripts: true,\n\t\t\tlocalResourceRoots: [\n\t\t\t\tthis._extensionUri\n\t\t\t]\n\t\t};\n\n\t\twebviewView.webview.html = this._getHtmlForWebview();\n\t}\n\n\tprivate _getHtmlForWebview() {\n\t\treturn `<!DOCTYPE html>\n\t\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<meta charset=\"UTF-8\">\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t\t<title>Todos</title>\n\t\t\t\t<style>\n\t\t\t\t\tbody {\n\t\t\t\t\t\tpadding: 10px;\n\t\t\t\t\t\tfont-family: var(--vscode-font-family);\n\t\t\t\t\t\tcolor: var(--vscode-foreground);\n\t\t\t\t\t}\n\t\t\t\t\th1 {\n\t\t\t\t\t\tcolor: var(--vscode-foreground);\n\t\t\t\t\t\tmargin: 0 0 10px 0;\n\t\t\t\t\t}\n\t\t\t\t</style>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<h1>todos</h1>\n\t\t\t\t<p>Your todos will appear here...</p>\n\t\t\t</body>\n\t\t\t</html>`;\n\t}\n}\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"codershubinc\" is now active!');\n\tconsole.log(\"Testing the extension +++++++++++++++++++++++++++++++++++++++++++++++++\");\n\n\t// Register the webview provider for the Explorer panel\n\tconst provider = new TodosViewProvider(context.extensionUri);\n\t// console.log(\"Registering the webview provider +++++++++++++++++++++++++++++++++++++++++++++++++\");\n\tcontext.subscriptions.push(\n\t\tvscode.window.registerWebviewViewProvider(TodosViewProvider.viewType, provider)\n\t);\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tconst disposable = vscode.commands.registerCommand('codershubinc.helloWorld', () => {\n\t\t// The code you place here will be executed every time your command is executed\n\t\t// Display a message box to the user\n\t\tvscode.window.showInformationMessage('Hello World from vs todo!');\n\t});\n\n\tconst disposable2 = vscode.commands.registerCommand('vs-todo.showTodosWebview', () => {\n\n\t});\n\n\tcontext.subscriptions.push(disposable);\n\tcontext.subscriptions.push(disposable2);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() { }\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","console","log","provider","TodosViewProvider","extensionUri","subscriptions","push","vscode","window","registerWebviewViewProvider","viewType","disposable","commands","registerCommand","showInformationMessage","disposable2","_extensionUri","static","constructor","resolveWebviewView","webviewView","_token","webview","options","enableScripts","localResourceRoots","this","html","_getHtmlForWebview","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}